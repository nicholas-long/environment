#!/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

function parse_searchsploit_csv {
  # simple CSV parser for exploitdb searchsploit fuzzy finding
  while IFS="," read -r recordid filename title bad_date author exploittype platform
  do
    echo "/usr/share/exploitdb/$filename:$title $author $platform $filename"
  done < <(tac /usr/share/exploitdb/files_exploits.csv | head -n -1)
}

choice=$(parse_searchsploit_csv | fzf --no-hscroll -d ':' --with-nth=2 --preview="$SCRIPT_DIR/exploit-fuzzy-search-preview {}")
echo $choice
if [ $? == 0 ]; then
  sel=$(echo $choice | cut -d ':' -f 1 | awk '{print $1}' | sed 's/exploits\///g')
  echo "Mirroring $sel"
  pane=$(tmux list-panes | grep active | cut -d ']' -f 3 | awk '{print $1}')
  panepath=$(tmux display-message -t "$pane" -a | grep pane_current_path | cut -d '=' -f 2)
  echo $panepath
  cd $panepath
  sel_length=$(echo -n $sel | wc -c)
  if [ $sel_length != 0 ]; then
    searchsploit -m $sel
    sleep 1
  fi
fi

