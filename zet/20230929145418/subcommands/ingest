#!/usr/bin/awk -f

# environ var fsdb_prog holds original arg var $0, the main program
BEGIN {
  compress_line_limit = 100 # constant value
  for(n=0;n<256;n++) ord[sprintf("%c",n)]=n # prepare char code lookup table
  partcount = ENVIRON["partitions"]
  print "using", partcount, "partitions"
  hasingesthook = (system("test -e hooks/ingest") == 0)
  # populate initial counts of parition file lines
  for (n = 0; n < partcount; n++) {
    cmd = "wc -l data/" n
    cmd | getline
    partdumpsize[n] = $1
    close(cmd)
  }
}
{
  hashcode = 0
  for (n = 1; n <= length($1); n++) hashcode += n * ord[substr($1,n,1)]
  part = hashcode % partcount
  partfn = "data/" part
  print >> partfn
  # maintain mru most recent use collection for file handles
  mru[partfn] = NR
  if (++lines_written[part] > compress_line_limit) {
    close(partfn)
    delete mru[partfn]
    # call compress subcommand here
    print "compressing", part, "total read", NR
    compresscommand = ENVIRON["fsdb_prog"] " compress " part
    system(compresscommand)
    lines_written[part] = 0
  }
  # clean up stuff from MRU if it is too big
  if (length(mru) > 64) {
    oldest = 0
    for (p in mru) if (mru[p] < oldest) oldest = mru[p]
    for (p in mru) if (mru[p] == oldest) {
      close(p)
      delete mru[p]
    }
  }
  # TODO: print to ingest hook if it exists: var hasingesthook
}
